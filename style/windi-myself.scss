.flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display:         flex;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-row {
          flex-direction: row;

  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
}

.flex-row-reverse {
          flex-direction: row-reverse;

  -webkit-box-direction: reverse;
  -webkit-box-orient: horizontal;
  -webkit-flex-direction: row-reverse;
      -ms-flex-direction: row-reverse;
}

.flex-col {
          flex-direction: column;

  -webkit-box-direction: normal;
  -webkit-box-orient: vertical;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
}

.flex-col-reverse {
          flex-direction: column-reverse;

  -webkit-box-direction: reverse;
  -webkit-box-orient: vertical;
  -webkit-flex-direction: column-reverse;
      -ms-flex-direction: column-reverse;
}

.flex-wrap {
          flex-wrap: wrap;

  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
}

.flex-wrap-reverse {
          flex-wrap: wrap-reverse;

  -webkit-flex-wrap: wrap-reverse;
      -ms-flex-wrap: wrap-reverse;
}

.flex-nowrap {
          flex-wrap: nowrap;

  -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
}

.justify-center {
          justify-content: center;

  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
}

.justify-start {
          justify-content: flex-start;

  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
}

.justify-end {
          justify-content: flex-end;

  -webkit-box-pack: end;
  -ms-flex-pack: end;
  -webkit-justify-content: flex-end;
}

.justify-between {
          justify-content: space-between;

  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
}

.justify-around {
          justify-content: space-around;

  -ms-flex-pack: distribute;
  -webkit-justify-content: space-around;
}

.justify-evenly {
          justify-content: space-evenly;

  -webkit-box-pack: space-evenly;
  -ms-flex-pack: space-evenly;
  -webkit-justify-content: space-evenly;
}

.items-start {
          align-items: flex-start;

  -webkit-align-items: flex-start;
  -webkit-box-align: start;
  -ms-flex-align: start;
}

.items-end {
          align-items: flex-end;

  -webkit-align-items: flex-end;
  -webkit-box-align: end;
  -ms-flex-align: end;
}

.items-center {
          align-items: center;

  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
}

.items-baseline {
          align-items: baseline;

  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
}

.items-stretch {
          align-items: stretch;

  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
}

.object-contain {
  -o-object-fit: contain;
     object-fit: contain;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.object-fill {
  -o-object-fit: fill;
     object-fit: fill;
}

.object-none {
  -o-object-fit: none;
     object-fit: none;
}

.object-scale-down {
  -o-object-fit: scale-down;
     object-fit: scale-down;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.relative {
  position: relative;
}

.overflow-one {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@for $row from 1 through 20 {
  .overflow-#{$row} {
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;

    -webkit-box-orient: vertical;
    -webkit-line-clamp: $row;
  }
}




@function pxRem($number) {
  @return $number*1px;
}

@function rem($number) {
  @return $number*1rpx;
}


/*内外间距*/
$x: l, r, t, b, lr, tb;

@for $i from 1 through 300 {
  @each $var in $x {
    .p#{$var}-#{$i}px {
      @if $var ==l {
        padding-left: pxRem($i);
      }

      @if $var ==r {
        padding-right: pxRem($i);
      }

      @if $var ==t {
        padding-top: pxRem($i);
      }

      @if $var ==b {
        padding-bottom: pxRem($i);
      }

      @if $var ==lr {
        padding-right: pxRem($i);
        padding-left: pxRem($i);
      }

      @if $var ==tb {
        padding-top: pxRem($i);
        padding-bottom: pxRem($i);
      }
    }

    .p#{$var}-#{$i}rpx {
      @if $var ==l {
        padding-left: rem($i);
      }

      @if $var ==r {
        padding-right: rem($i);
      }

      @if $var ==t {
        padding-top: rem($i);
      }

      @if $var ==b {
        padding-bottom: rem($i);
      }

      @if $var ==lr {
        padding-right: rem($i);
        padding-left: rem($i);
      }

      @if $var ==tb {
        padding-top: rem($i);
        padding-bottom: rem($i);
      }
    }

    .m#{$var}-#{$i}px {
      @if $var ==l {
        margin-left: pxRem($i);
      }

      @if $var ==r {
        margin-right: pxRem($i);
      }

      @if $var ==t {
        margin-top: pxRem($i);
      }

      @if $var ==b {
        margin-bottom: pxRem($i);
      }

      @if $var ==lr {
        margin-right: pxRem($i);
        margin-left: pxRem($i);
      }

      @if $var ==tb {
        margin-top: pxRem($i);
        margin-bottom: pxRem($i);
      }
    }

    .m#{$var}-#{$i}rpx {
      @if $var ==l {
        margin-left: rem($i);
      }

      @if $var ==r {
        margin-right: rem($i);
      }

      @if $var ==t {
        margin-top: rem($i);
      }

      @if $var ==b {
        margin-bottom: rem($i);
      }

      @if $var ==lr {
        margin-right: rem($i);
        margin-left: rem($i);
      }

      @if $var ==tb {
        margin-top: rem($i);
        margin-bottom: rem($i);
      }
    }
  }
}
